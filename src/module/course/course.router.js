import { Router } from "express";
import { auth } from "../../middleware/auth.js";
import { endpoints } from "./course.endpoint.js";
import * as courseController from './controller/course.controller.js';
import { validation } from "../../middleware/validation.js";
import * as validators from './course.validation.js';
import { fileUpload, fileValidation } from "../../services/multer.js";
import reviewController from '../review/review.router.js';
import exerciseRouter from '../exercise/exercise.router.js';
const router = Router({mergeParams:true});
router.post('/',auth(endpoints.create),fileUpload(fileValidation.video).single('video'),validation(validators.crateCourseSchema),courseController.crateCourse);
router.put('/:courseId',auth(endpoints.update),fileUpload(fileValidation.video).single('video'),validation(validators.updateCourseSchema),courseController.updateCourse);
router.get('/',auth(endpoints.get),validation(validators.getCourseSchema),courseController.getCourse);
router.get('/softDeleteProduct',auth(endpoints.softDelete),validation(validators.getSoftDeleteSchema),courseController.getSoftDelete);
router.get('/:courseId',auth(endpoints.get),validation(validators.getSpecificCourseSchema),courseController.getSpecificCourse);
router.patch('/:courseId/softDelete',auth(endpoints.update),validation(validators.softDeleteSchema),courseController.softDelete);
router.patch('/:courseId/restore',auth(endpoints.update),validation(validators.restoreSchema),courseController.restore);
router.delete('/:courseId/forceDelete',auth(endpoints.delete),validation(validators.forceDeleteSchema),courseController.forceDelete);
router.use('/:courseId/review',reviewController);
router.use('/:courseId/exercies',exerciseRouter);
export default router;